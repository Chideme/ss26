"""customer txns

Revision ID: 0edc0e77c0e5
Revises: 9376b5b72fe0
Create Date: 2021-04-04 03:50:19.802503

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0edc0e77c0e5'
down_revision = '9376b5b72fe0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
   
    
    conn = op.get_bind()
    schemas = conn.execute("SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT IN ('information_schema', 'pg_catalog','pg_toast', 'pg_temp_1', 'pg_toast_temp_1','public')").fetchall()
    schemas = [ str(x[0]) for x in schemas]
    for schema in schemas:
        print("Executing on schema {}".format(schema))
        op.execute("SET search_path TO {}".format(schema))
        op.create_table('customer_transactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('txn_type', sa.String(), nullable=False),
        sa.Column('customer_id', sa.Integer(), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('post_balance', sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    
        op.create_table('supplier_transactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('transaction_type', sa.String(), nullable=False),
        sa.Column('supplier_id', sa.Integer(), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('ref', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.execute("SET search_path TO default")
    op.execute("SET search_path TO default")
   
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
   
    conn = op.get_bind()
    schemas = conn.execute("SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT IN ('information_schema', 'pg_catalog','pg_toast', 'pg_temp_1', 'pg_toast_temp_1','public')").fetchall()
    schemas = [ str(x[0]) for x in schemas]
    for schema in schemas:
        op.drop_table('supplier_transactions')
        op.drop_table('customer_transactions')
        op.execute("SET search_path TO default")
    op.execute("SET search_path TO default")
   
    # ### end Alembic commands ###
