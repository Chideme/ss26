"""empty message

Revision ID: 1ecd32879c7f
Revises: 58f5fe7511d3
Create Date: 2020-10-14 17:43:30.092036

"""
from alembic import op
import sqlalchemy as sa
from alembic_multischema import perSchema,getNonSystemSchemas

# revision identifiers, used by Alembic.
revision = '1ecd32879c7f'
down_revision = '58f5fe7511d3'
branch_labels = None
depends_on = None




def upgrade():
    # ### Add supplier info for fuel deliveries! ###
    
   
    conn = op.get_bind()
    schemas =conn.execute("SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT IN ('information_schema', 'pg_catalog','pg_toast', 'pg_temp_1', 'pg_toast_temp_1')").fetchall()
    schemas = [ str(i[0]) for i in  schemas if i[0] !="public"]
   
    for i in schemas:
        op.execute("SET search_path TO {}".format(i))
        op.create_table('supplier',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('contact_person', sa.String(), nullable=True),
        sa.Column('phone_number', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        
        )
        
        op.add_column(
            'fuel_delivery', 
            sa.Column('supplier', sa.Integer(), nullable=True)
        )
        
        #op.execute("UPDATE fuel_delivery SET supplier = {}".format(d))
        #op.alter_column('fuel_delivery', 'supplier', nullable=False)
        op.create_foreign_key(
            'fk_delivery_supplier','fuel_delivery',
            'supplier',
            ['supplier'], ['id'],
        )
        
    op.execute("SET search_path TO public")
   
    # ### end Alembic commands ###

perSchema(schemas=["Public"])
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supplier')
   
    # ### end Alembic commands ###
