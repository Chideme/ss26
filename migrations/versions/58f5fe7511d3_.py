"""empty message

Revision ID: 58f5fe7511d3
Revises: 3ad0da459025
Create Date: 2020-10-14 16:16:23.731696

"""
from alembic import op
import sqlalchemy as sa
from alembic_multischema import perSchema,getNonSystemSchemas

# revision identifiers, used by Alembic.
revision = '58f5fe7511d3'
down_revision = '3ad0da459025'
branch_labels = None
depends_on = None

perSchema(exclude=["Public"])
def upgrade():
    # ### Add supplier info for fuel deliveries! ###
    
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact_person', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    
    )
    conn = op.get_bind()
    schemas =conn.execute("SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT IN ('information_schema', 'pg_catalog','pg_toast', 'pg_temp_1', 'pg_toast_temp_1')").fetchall()
    schemas = [ i for i in  schemas if i =="Public"]
    supplier_table = "supplier"
    delivery_table = "delivery"
    for i in schemas:
        supplier_table = i+"supplier"
        delivery_table = i+"fuel_delivery"
        op.add_column(
            delivery_table, 
            sa.Column('supplier', sa.Integer(), nullable=True)
        )
        op.execute("UPDATE {} SET supplier ='N/A'",format(delivery_table))
        op.alter_column(delivery_table, 'supplier', nullable=False)
        op.create_foreign_key(
            'fk_delivery_supplier',
            supplier_table,delivery_table,
            ['supplier'], ['id'],
        )
        
    
   
    # ### end Alembic commands ###

perSchema(schemas=["Public"])
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supplier')
   
    # ### end Alembic commands ###
